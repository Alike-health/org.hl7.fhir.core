package org.hl7.fhir.android.generated.dstu2.DocumentReferenceEnum;

// Generated on Wed, Jul 13, 2016 05:32+1000 for FHIR v1.0.2
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import org.hl7.fhir.android.generated.dstu2.EnumerationsEnum.DocumentReferenceStatus;
import org.hl7.fhir.android.generated.dstu2.EnumerationsEnum.DocumentReferenceStatusEnumFactory;
import org.hl7.fhir.instance.model.api.IBaseBackboneElement;
import org.hl7.fhir.exceptions.FHIRException;
import org.hl7.fhir.utilities.Utilities;
import org.hl7.fhir.android.generated.dstu2.DocumentReferenceEnum.DocumentRelationshipTypeEnumFactory;
import org.hl7.fhir.android.generated.dstu2.DocumentReferenceEnum.DocumentRelationshipType;

public enum DocumentRelationshipType {

    /**
     * This document logically replaces or supersedes the target document.
     */
    REPLACES,
    /**
     * This document was generated by transforming the target document (e.g. format or language conversion).
     */
    TRANSFORMS,
    /**
     * This document is a signature of the target document.
     */
    SIGNS,
    /**
     * This document adds additional information to the target document.
     */
    APPENDS,
    /**
     * added to help the parsers
     */
    NULL;

    public static DocumentRelationshipType fromCode(String codeString) throws FHIRException {
        if (codeString == null || "".equals(codeString))
            return null;
        if ("replaces".equals(codeString))
            return REPLACES;
        if ("transforms".equals(codeString))
            return TRANSFORMS;
        if ("signs".equals(codeString))
            return SIGNS;
        if ("appends".equals(codeString))
            return APPENDS;
        throw new FHIRException("Unknown DocumentRelationshipType code '" + codeString + "'");
    }

    public String toCode() {
        switch(this) {
            case REPLACES:
                return "replaces";
            case TRANSFORMS:
                return "transforms";
            case SIGNS:
                return "signs";
            case APPENDS:
                return "appends";
            default:
                return "?";
        }
    }

    public String getSystem() {
        switch(this) {
            case REPLACES:
                return "http://hl7.org/fhir/document-relationship-type";
            case TRANSFORMS:
                return "http://hl7.org/fhir/document-relationship-type";
            case SIGNS:
                return "http://hl7.org/fhir/document-relationship-type";
            case APPENDS:
                return "http://hl7.org/fhir/document-relationship-type";
            default:
                return "?";
        }
    }

    public String getDefinition() {
        switch(this) {
            case REPLACES:
                return "This document logically replaces or supersedes the target document.";
            case TRANSFORMS:
                return "This document was generated by transforming the target document (e.g. format or language conversion).";
            case SIGNS:
                return "This document is a signature of the target document.";
            case APPENDS:
                return "This document adds additional information to the target document.";
            default:
                return "?";
        }
    }

    public String getDisplay() {
        switch(this) {
            case REPLACES:
                return "Replaces";
            case TRANSFORMS:
                return "Transforms";
            case SIGNS:
                return "Signs";
            case APPENDS:
                return "Appends";
            default:
                return "?";
        }
    }
}
